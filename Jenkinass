pipeline {
    agent any

    environment {
        DIRECTORY_PATH = "C:/Users/Jenkins/Jenkinass"
        TESTING_ENVIRONMENT = "testing-environment"
        PRODUCTION_ENVIRONMENT = "Beatrice"
        EMAIL_RECIPIENT = "beaty.cheru33@gmail.com"  // Specify the email address to receive notifications
    }

    stages {
        stage('Build') {
            steps {
                echo "Build code using build automation tool like Maven"
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo "Run unit tests and integration tests"
                    echo "using appropriate test automation tools"
                }
            }
            post {
                success {
                    sendEmail("Unit and Integration Tests Passed", "Unit and integration tests have passed.")
                }
                failure {
                    sendEmail("Unit and Integration Test Failed", "Unit and integration tests failed.")
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo "Integrate a code analysis tool to analyze your code (SonarQube)"
            }
        }

        stage('Security Scan') {
            steps {
                echo "Perform a security scan on the code using a security scanning tool"
            }
            post {
                success {
                    sendEmail("Security Scan Passed", "Security scan has passed.")
                }
                failure {
                    sendEmail("Security Scan Failed", "Security scan has failed.")
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo "Deploy the application to a staging server (e.g., using AWS CLI or Jenkins plugins)"
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo "Run integration tests on the staging environment"
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "Deploy the application to a production server (e.g., using AWS CLI or Jenkins plugins)"
            }
        }
    }
}

def sendEmail(String subject, String body) {
    emailext(
        to: env.EMAIL_RECIPIENT,
        subject: subject,
        body: body,
        attachLog: true,
        mimeType: 'text/plain',
        compressLog: true
    )
}
